<%= include_gon %>
<%= render "shared/second-header"%>

<div class='transaction-contents'>
  <div class='transaction-main'>
    <h1 class='transaction-title-text'>
      購入内容の確認
    </h1>
    
    <% if @item.present? %>
      <%# 購入内容の表示 %>
      <div class='buy-item-info'>
        <% if @item.image.attached? %>
          <%= image_tag @item.image, class: 'buy-item-img' %>
        <% else %>
          <div class='buy-item-img' style="background-color: #f5f5f5; display: flex; align-items: center; justify-content: center; color: #999;">
            画像なし
          </div>
        <% end %>
        <div class='buy-item-right-content'>
          <h2 class='buy-item-text'>
            <%= @item.name %>
          </h2>
          <div class='buy-item-price'>
            <p class='item-price-text'>¥<%= @item.price %></p>
            <p class='item-price-sub-text'><%= @item.delivery_fee&.name || '配送料未設定' %></p>
          </div>
        </div>
      </div>
      <%# /購入内容の表示 %>

      <%# 支払額の表示 %>
      <div class='item-payment'>
        <h1 class='item-payment-title'>
          支払金額
        </h1>
        <p class='item-payment-price'>
          ¥<%= @item.price %>
        </p>
      </div>
      <%# /支払額の表示 %>
      
      <%= form_with model: @order_address, url:item_orders_path(@item), id: 'charge-form', class: 'transaction-form-wrap',local: true do |f| %>
        <%= render 'shared/error_messages', model: f.object %>
        
        <%# カード情報の入力 %>
        <div class='credit-card-form'>
          <h1 class='info-input-haedline'>
            クレジットカード情報入力
          </h1>
          <div class="form-group">
            <div class='form-text-wrap'>
              <label class="form-text">カード情報</label>
              <span class="indispensable">必須</span>
            </div>
            <div id="number-form" class="input-default"></div>
            <div class='available-card'>
              <img src="/images/card-visa.gif" class="card-logo" alt="VISA">
              <img src="/images/card-mastercard.gif" class="card-logo" alt="MasterCard">
              <img src="/images/card-jcb.gif" class="card-logo" alt="JCB">
              <img src="/images/card-amex.gif" class="card-logo" alt="American Express">
            </div>
          </div>
          <div class="form-group">
            <div class='form-text-wrap'>
              <label class="form-text">有効期限</label>
              <span class="indispensable">必須</span>
            </div>
            <div class='input-expiration-date-wrap'>
              <div id="expiry-form" class="input-default"></div>
            </div>
          </div>
          <div class="form-group">
            <div class='form-text-wrap'>
              <label class="form-text">セキュリティコード</label>
              <span class="indispensable">必須</span>
            </div>
            <div id="cvc-form" class="input-default"></div>
          </div>
        </div>
        <%# /カード情報の入力 %>
        
        <%# 配送先の入力 %>
        <div class='shipping-address-form'>
          <h1 class='info-input-haedline'>
            配送先入力
          </h1>
          <div class="form-group">
            <div class='form-text-wrap'>
              <label class="form-text">郵便番号</label>
              <span class="indispensable">必須</span>
            </div>
            <%= f.text_field :postal_code, class:"input-default", id:"postal-code", placeholder:"例）123-4567", maxlength:"8" %>
          </div>
          <div class="form-group">
            <div class='form-text-wrap'>
              <label class="form-text">都道府県</label>
              <span class="indispensable">必須</span>
            </div>
            <%= f.collection_select(:prefecture_id, Prefecture.all, :id, :name, {}, {class:"select-box", id:"prefecture"}) %>
          </div>
          <div class="form-group">
            <div class='form-text-wrap'>
              <label class="form-text">市区町村</label>
              <span class="indispensable">必須</span>
            </div>
            <%= f.text_field :city, class:"input-default", id:"city", placeholder:"例）横浜市緑区"%>
          </div>
          <div class="form-group">
            <div class='form-text-wrap'>
              <label class="form-text">番地</label>
              <span class="indispensable">必須</span>
            </div>
            <%= f.text_field :house_number, class:"input-default", id:"addresses", placeholder:"例）青山1-1-1"%>
          </div>
          <div class="form-group">
            <div class='form-text-wrap'>
              <label class="form-text">建物名</label>
              <span class="form-any">任意</span>
            </div>
            <%= f.text_field :building_name, class:"input-default", id:"building", placeholder:"例）柳ビル103"%>
          </div>
          <div class="form-group">
            <div class='form-text-wrap'>
              <label class="form-text">電話番号</label>
              <span class="indispensable">必須</span>
            </div>
            <%= f.text_field :phone_number, class:"input-default", id:"phone-number", placeholder:"例）09012345678",maxlength:"11"%>
          </div>
        </div>
        <%# /配送先の入力 %>
        
        <div class='buy-btn'>
          <%= f.submit "購入" ,class:"buy-red-btn", id:"button" %>
        </div>
      <% end %>
    <% else %>
      <p>商品情報が取得できませんでした。</p>
    <% end %>
  </div>
</div>

<%= render "shared/second-footer"%>

<script src="https://js.pay.jp/v2/pay.js"></script>
<script>
  // Pay.jpの読み込み確認
  document.addEventListener('DOMContentLoaded', function() {
    console.log('=== 購入画面読み込み確認 ===');
    console.log('Payjp:', typeof Payjp !== 'undefined' ? '利用可能' : '利用不可');
    console.log('gon:', typeof gon !== 'undefined' ? '利用可能' : '利用不可');
    if (typeof gon !== 'undefined') {
      console.log('gon.public_key:', gon.public_key);
    }
    
    // フォーム要素の確認
    console.log('number-form:', document.getElementById('number-form'));
    console.log('expiry-form:', document.getElementById('expiry-form'));
    console.log('cvc-form:', document.getElementById('cvc-form'));
    console.log('charge-form:', document.getElementById('charge-form'));
  });
</script>

<script>
  // card.jsの内容を直接記述
  const pay = () => {
    // gonとPayjpが利用可能かチェック
    if (typeof gon === 'undefined' || !gon.public_key) {
      console.error('gonまたはgon.public_keyが利用できません');
      return;
    }

    if (typeof Payjp === 'undefined') {
      console.error('Payjpが利用できません');
      return;
    }

    const publicKey = gon.public_key;
    const payjp = Payjp(publicKey);
    const elements = payjp.elements();
    
    const numberElement = elements.create('cardNumber', {
      placeholder: 'カード番号'
    });
    const expiryElement = elements.create('cardExpiry', {
      placeholder: '月/年'
    });
    const cvcElement = elements.create('cardCvc', {
      placeholder: 'CVC'
    });

    // フォーム要素が存在するかチェック
    const numberForm = document.getElementById('number-form');
    const expiryForm = document.getElementById('expiry-form');
    const cvcForm = document.getElementById('cvc-form');
    const form = document.getElementById('charge-form');

    if (!numberForm || !expiryForm || !cvcForm || !form) {
      console.error('必要なフォーム要素が見つかりません');
      return;
    }

    // 既存の要素をクリア
    numberForm.innerHTML = '';
    expiryForm.innerHTML = '';
    cvcForm.innerHTML = '';

    numberElement.mount('#number-form');
    expiryElement.mount('#expiry-form');
    cvcElement.mount('#cvc-form');

    console.log('Pay.jp要素をマウントしました');

    form.addEventListener("submit", (e) => {
      e.preventDefault();
      console.log('フォーム送信開始');

      payjp.createToken(numberElement).then(function (response) {
        if (response.error) {
          console.error('トークン生成エラー:', response.error);
          alert('カード情報に誤りがあります。');
        } else {
          console.log('トークン生成成功:', response.id);
          const token = response.id;
          const renderDom = document.getElementById("charge-form");
          const tokenObj = `<input value="${token}" name="token" type="hidden">`;
          renderDom.insertAdjacentHTML("beforeend", tokenObj);
          
          numberElement.clear();
          expiryElement.clear();
          cvcElement.clear();
          document.getElementById("charge-form").submit();
        }
      }).catch(function(error) {
        console.error('Pay.jpエラー:', error);
        alert('カード情報の処理中にエラーが発生しました。');
      });
    });
  };

  // Pay.jpが読み込まれた後に初期化を実行
  function initializePay() {
    if (typeof Payjp !== 'undefined') {
      console.log('Pay.jpが利用可能です。初期化を開始します。');
      pay();
    } else {
      console.log('Pay.jpがまだ読み込まれていません。1秒後に再試行します。');
      setTimeout(initializePay, 1000);
    }
  }

  // 複数のイベントで初期化を試行
  window.addEventListener("turbo:load", initializePay);
  window.addEventListener("turbo:render", initializePay);
  window.addEventListener("DOMContentLoaded", initializePay);
</script>